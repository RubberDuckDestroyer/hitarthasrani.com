{"version":3,"sources":["webpack:///./src/components/video.js","webpack:///./src/templates/blog-post.js"],"names":["Video","videoSrcURL","videoTitle","className","src","title","allow","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","width","height","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","pageContext","previous","next","videoURL","frontmatter","isVideoPresent","location","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component"],"mappings":"uLAgBeA,EAfD,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,WAAf,OACV,yBAAKC,UAAU,SACX,4BACIC,IAAKH,EACLI,MAAOH,EACPI,MAAM,0EACNC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,EACfC,MAAM,OACNC,OAAO,a,YCFbC,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAahB,MACpD,EAA2BU,KAAKC,MAAMM,YAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAEZC,EAAWX,EAAKY,YAAYzB,YAC5B0B,EAAgC,KAAbF,SAAmBA,EAC5C,OACE,kBAAC,IAAD,CAAQG,SAAUb,KAAKC,MAAMY,SAAUvB,MAAOc,GAC5C,kBAAC,IAAD,CACEd,MAAOS,EAAKY,YAAYrB,MACxBwB,YAAaf,EAAKY,YAAYG,aAAef,EAAKgB,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfpB,EAAKY,YAAYrB,OAEpB,uBACE0B,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBnB,EAAKY,YAAYW,OAIrBV,GAEG,kBAAC,EAAD,CACA1B,YAAawB,EACbvB,WAAYY,EAAKY,YAAYxB,aAKjC,6BAASoC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QACjD,wBACET,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAApC,KACKzB,EAASG,YAAYrB,QAI9B,4BACGmB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKE,YAAYrB,MADpB,W,GA1Ee4C,IAAMC,WAsFtBtC","file":"component---src-templates-blog-post-js-d5594703776af383fa4d.js","sourcesContent":["import React from \"react\";\r\nconst Video = ({videoSrcURL, videoTitle}) => (\r\n    <div className=\"video\">\r\n        <iframe\r\n            src={videoSrcURL}\r\n            title={videoTitle}\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            webkitallowfullscreen=\"true\"\r\n            mozallowfullscreen=\"true\"\r\n            allowFullScreen\r\n            width=\"100%\"\r\n            height=\"500rem\"\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default Video","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Video from \"../components/video\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    const videoURL = post.frontmatter.videoSrcURL\r\n    const isVideoPresent = ( videoURL === \"\" || videoURL === null || videoURL === undefined ) ? false : true\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <article>\r\n          <header>\r\n            <h1\r\n              style={{\r\n                marginTop: rhythm(1),\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              {post.frontmatter.title}\r\n            </h1>\r\n            <p\r\n              style={{\r\n                ...scale(-1 / 5),\r\n                display: `block`,\r\n                marginBottom: rhythm(1),\r\n              }}\r\n            >\r\n              {post.frontmatter.date}\r\n            </p>\r\n          </header>\r\n\r\n          {isVideoPresent && \r\n            (\r\n              <Video\r\n              videoSrcURL={videoURL}\r\n              videoTitle={post.frontmatter.videoTitle}\r\n              />\r\n            )\r\n          }\r\n\r\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n          <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n          <footer>\r\n            <Bio />\r\n          </footer>\r\n        </article>\r\n\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n        videoSrcURL\r\n        videoTitle\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}