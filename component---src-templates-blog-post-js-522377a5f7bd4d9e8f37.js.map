{"version":3,"sources":["webpack:///./src/components/video.js","webpack:///./src/templates/blog-post.js"],"names":["Video","videoSrcURL","videoTitle","className","src","title","allow","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","width","height","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","pageContext","previous","next","videoURL","frontmatter","isVideoPresent","location","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","React","Component"],"mappings":"uLAgBeA,EAfD,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,WAAf,OACV,yBAAKC,UAAU,SACX,4BACIC,IAAKH,EACLI,MAAOH,EACPI,MAAM,0EACNC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,EACfC,MAAM,OACNC,OAAO,a,YCFbC,E,kGACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAahB,MACpD,EAA2BU,KAAKC,MAAMM,YAA9BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,KAEZC,EAAWX,EAAKY,YAAYzB,YAC5B0B,EAAgC,KAAbF,SAAmBA,EAC5C,OACE,kBAAC,IAAD,CAAQG,SAAUb,KAAKC,MAAMY,SAAUvB,MAAOc,GAC5C,kBAAC,IAAD,CACEd,MAAOS,EAAKY,YAAYrB,MACxBwB,YAAaf,EAAKY,YAAYG,aAAef,EAAKgB,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfpB,EAAKY,YAAYrB,OAEpB,uBACE0B,MAAK,iBACAI,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBnB,EAAKY,YAAYW,OAIrBV,GAEG,kBAAC,EAAD,CACA1B,YAAawB,EACbvB,WAAYY,EAAKY,YAAYxB,aAKjC,6BAASoC,wBAAyB,CAAEC,OAAQzB,EAAK0B,QACjD,wBACET,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAApC,KACKzB,EAASG,YAAYrB,QAI9B,4BACGmB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKE,YAAYrB,MADpB,W,GA1Ee4C,IAAMC,WAsFtBtC","file":"component---src-templates-blog-post-js-522377a5f7bd4d9e8f37.js","sourcesContent":["import React from \"react\";\nconst Video = ({videoSrcURL, videoTitle}) => (\n    <div className=\"video\">\n        <iframe\n            src={videoSrcURL}\n            title={videoTitle}\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            webkitallowfullscreen=\"true\"\n            mozallowfullscreen=\"true\"\n            allowFullScreen\n            width=\"100%\"\n            height=\"500rem\"\n        />\n    </div>\n)\n\nexport default Video","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Video from \"../components/video\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    const videoURL = post.frontmatter.videoSrcURL\n    const isVideoPresent = ( videoURL === \"\" || videoURL === null || videoURL === undefined ) ? false : true\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginTop: rhythm(1),\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                ...scale(-1 / 5),\n                display: `block`,\n                marginBottom: rhythm(1),\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n\n          {isVideoPresent && \n            (\n              <Video\n              videoSrcURL={videoURL}\n              videoTitle={post.frontmatter.videoTitle}\n              />\n            )\n          }\n\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              marginBottom: rhythm(1),\n            }}\n          />\n          <footer>\n            <Bio />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        videoSrcURL\n        videoTitle\n      }\n    }\n  }\n`\n"],"sourceRoot":""}